<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!--自动创建表-->
        <!--
            create：
            每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
            create-drop ：
            每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
            update：
            最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
            validate ：
            每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
        -->
        <property name="hbm2ddl.auto">update</property>
        <!-- 数据库方言 -->
        <!--<property name="dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>-->
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/demo</property>
        <property name="connection.username">root</property>
        <property name="connection.password">root</property>

        <!-- 是否打印SQL语句 -->
        <property name="show_sql">true</property>
        <!-- 配置currentSession 事务 在单独JDBC连接时添加-->
        <!-- 本地事务-->
        <property name="hibernate.current_session_context_class">thread</property>
        <!-- 全局事务 当服务在web容器中运行时添加
        <property name="hibernate.current_session_context_class">jta</property>-->
        <property name="hibernate.cache.use_second_level_cache">true</property>
        <property name="hibernate.cache.use_query_cache">true</property>
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>
        <!-- hibernate3 使用这个类 -->
        <!--<property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</property>-->
        <!--<property name="cache.provider_class">org.hibernate.cache.EhCacheProvider</property>-->
        <!-- 二级缓存 ehcache的配置文件位置 -->
        <property name="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</property>
        <mapping resource="cache.hbm.xml"></mapping>
        <mapping resource="introduction.hbm.xml"></mapping>
        <mapping class="com.bodu.hibernate.cache.User"></mapping>
        <mapping class="com.bodu.hibernate.annotation.Annotation"></mapping>
        <mapping class="com.bodu.hibernate.introduction.Department"></mapping>
        <mapping class="com.bodu.hibernate.introduction.Employee"></mapping>
        <mapping class="com.bodu.hibernate.introduction.SalaryGrade"></mapping>
        <mapping class="com.bodu.hibernate.introduction.Timekeeper"></mapping>
        <mapping resource="employee.hbm.xml"></mapping>
        <mapping class="com.bodu.hibernate.inheritance_anno.Employee"></mapping>
        <mapping class="com.bodu.hibernate.inheritance_anno.Contract_Employee"></mapping>
        <mapping class="com.bodu.hibernate.inheritance_anno.Regular_Employee"></mapping>
        <mapping resource="collection.hbm.xml"></mapping>
        <mapping resource="component.hbm.xml"></mapping>


    </session-factory>
</hibernate-configuration>